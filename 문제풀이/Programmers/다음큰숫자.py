# Programmers 다음 큰 숫자 알고리즘
# https://programmers.co.kr/learn/courses/30/lessons/12911
# 자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의한다.
# 1. n의 다음 큰 숫자는 n보다 큰 자연수. 2. n의 다음 큰 숫자와 n은 2진수로 변했을 때 1의 갯수가 같다.
# 3. n의 다음 큰 숫자는 조건 1,2를 만족하는 수 중 가장 작은 수이다.
# 예를 들어 78(1001110)의 다음 큰 숫자는 83(1010011) // 15(1111) -> 23(10111)
# 23(10111) -> 27(11011) -> 29(11101) -> 31(11110)
# 이진수 변환 -> 내장함수 bin 사용. [:2]부터 표현 -> 변수사용해서 문자열 '1'의 개수를 세고
# 반복문으로 n에 1씩 가산하면서 똑같이 가산된  n에 bin[:2]사용했을때 문자열 '1'의 개수가 같으면 그 값을 반환하도록 짰음.

def solution(n):
    num = bin(n)[2:]
    one_count1 = num.count('1')

    while True:
        n += 1
        num2 = bin(n)[2:]
        one_count2 = num2.count('1')
        if one_count1 == one_count2:
            return n

# ------------------------------------------------------------------------------------------------
# 조금 더 깔끔한 풀이방법
# 어차피 n에 1씩 가산하는건 같으니 반복문을 for문으로 n이상부터 더해주는 방식
def solution2(n):
    x = bin(n).count('1')
    for i in range(n+1, 1000000):
        if bin(i).count('1') == x:
            return i